<Window x:Class="TuneUp.TuneUpWindow"
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
         xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
         xmlns:local="clr-namespace:TuneUp"
         xmlns:ui="clr-namespace:Dynamo.UI;assembly=DynamoCoreWpf"
         xmlns:componentmodel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
         mc:Ignorable="d" 
         d:DesignHeight="300" d:DesignWidth="300"
         Width="500" Height="100">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoColorsAndBrushesDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoModernDictionaryUri}" />
            </ResourceDictionary.MergedDictionaries>
            <local:IsGroupToMarginMultiConverter  x:Key="IsGroupToMarginMultiConverter" />
            <local:IsGroupToVisibilityMultiConverter  x:Key="IsGroupToVisibilityMultiConverter" />
            <local:IsGroupToBrushConverter x:Key="IsGroupToBrushConverter" />
        </ResourceDictionary>
    </Window.Resources>
    <Grid Name="MainGrid" >
        <Grid.Resources>
            <!-- DataGrid style -->
            <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
                <Setter Property="ColumnHeaderStyle" Value="{DynamicResource ColumnHeaderStyle1}"/>
                <Setter Property="RowStyle" Value="{DynamicResource RowStyle1}"/>
                <Setter Property="CellStyle" Value="{DynamicResource CellStyle1}"/>
                <Setter Property="RowHeaderWidth" Value="0"/>
                <Setter Property="BorderThickness" Value="0.5" />
                <Setter Property="BorderBrush" Value="#555555"/>
                <Setter Property="ColumnWidth" Value="Auto"/>
                <Setter Property="GridLinesVisibility" Value="Vertical"/>
                <Setter Property="VerticalGridLinesBrush" Value="#555555"/>
            </Style>
            <!-- DataGridColumnHeader style -->
            <Style x:Key="ColumnHeaderStyle1" TargetType="DataGridColumnHeader">
                <Setter Property="Height" Value="20"/>
                <Setter Property="Background" Value="#333333"/>
                <Setter Property="Foreground" Value="{StaticResource MemberButtonText}"/>
                <Setter Property="FontFamily" Value="{StaticResource ArtifaktElementRegular}"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="#555555"/>
                <Setter Property="Margin" Value="5,0,10,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="HeaderContent"
                                              Grid.Column="1"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              Margin="11,0,0,0"/>
                                <Path x:Name="SortArrow"
                                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                                  Grid.Column="0"
                                  Margin="0,0,4,0"
                                  Stretch="Fill"
                                  Width="7" Height="6"
                                  Fill="#999999"                                      
                                  VerticalAlignment="Center"
                                  RenderTransformOrigin="0.5,0.5"
                                  Visibility="Collapsed"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="SortDirection" Value="Ascending">
                                    <Setter TargetName="HeaderContent" Property="Margin" Value="0"/>
                                    <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="SortArrow" Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="180"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="SortDirection" Value="Descending">
                                    <Setter TargetName="HeaderContent" Property="Margin" Value="0"/>
                                    <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="SortArrow" Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="0"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- DataGridRow style -->
            <Style x:Key="RowStyle1" TargetType="DataGridRow">
                <Setter Property="Background" Value="{Binding BackgroundBrush}"/>
                <Setter Property="BorderThickness" Value="0.45" />
                <Setter Property="BorderBrush" Value="#555555"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#434343"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{StaticResource MainBackgroundColor}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!-- Cell style -->
            <Style x:Key="CellStyle1" TargetType="DataGridCell">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Margin" Value="1" />
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#555555" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!-- Group Style -->
            <Style x:Key="GroupHeaderStyle" TargetType="{x:Type GroupItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GroupItem}">
                            <StackPanel>
                                <TextBlock Text="{Binding Name}"/>
                                <ItemsPresenter/>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- TextBlock style for DataGrid columns -->
            <Style x:Key="DataGridTextBlockStyle" TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="10,0,10,0"/>
                <Setter Property="Foreground" Value="{Binding IsGroup, Converter={StaticResource IsGroupToBrushConverter}}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=IsMouseOver}" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource MemberButtonText}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=IsSelected}" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource MemberButtonText}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#999999"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!-- Recompute All Button -->
        <StackPanel
        Grid.Row="0"
        HorizontalAlignment="Left"
        Orientation="Horizontal">
            <Button
            Name="RecomputeGraph"
            Width="Auto"
            Height="Auto"
            Margin="2,1,1,10"
            Padding="5,2,5,2"
            IsEnabled="{Binding  Path=IsRecomputeEnabled}"
            Click="RecomputeGraph_Click">
                Run All
            </Button>
            <Button
            Name="ExportTimes"
            Width="Auto"
            Height="Auto"
            Margin="2,1,1,10"
            Padding="5,2,5,2"
            Click="ExportTimes_Click"
            IsEnabled="{Binding Path=IsRecomputeEnabled}">
                Export
            </Button>
            <Label Foreground="{StaticResource NodeNameForeground}">Total Graph Execution Time:</Label>
            <Label Foreground="{StaticResource NodeNameForeground}"
               FontFamily="{StaticResource ArtifaktElementRegular}"
               Name="TotalGraphExecutiontimeLabel"
               Content="{Binding Path=TotalGraphExecutiontime, Mode=OneWay}"/>
        </StackPanel>
        <StackPanel Grid.Row="1">
            <DataGrid
            x:Name="NodeAnalysisTable"
            Grid.Row="1"                
            ItemsSource="{Binding Path=ProfiledNodesCollection.View}"                
            Style="{StaticResource DataGridStyle1}"
            AutoGenerateColumns="False"
            CanUserAddRows="False"
            Background="#353535"
            FontSize="11"
            VerticalAlignment="Center"
            SelectionUnit="FullRow"
            SelectionMode="Single"
            ScrollViewer.CanContentScroll="False"
            ScrollViewer.HorizontalScrollBarVisibility="Auto"
            ScrollViewer.VerticalScrollBarVisibility="Auto"
            CanUserResizeColumns="True"
            CanUserSortColumns="True"
            HeadersVisibility="Column"
            SelectionChanged="NodeAnalysisTable_SelectionChanged"
            PreviewMouseDown="NodeAnalysisTable_PreviewMouseDown"
            MouseLeave="NodeAnalysisTable_MouseLeave"
            Sorting="NodeAnalysisTable_Sorting">
                <DataGrid.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <StackPanel>
                                    <TextBlock
                                    Margin="3"
                                    FontFamily="{StaticResource ArtifaktElementRegular}"
                                    FontSize="12"
                                    Foreground="{StaticResource NodeNameForeground}"
                                    Text="{Binding Name}" />
                                </StackPanel>
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </DataGrid.GroupStyle>
                <DataGrid.Columns>
                    <!--  Execution Order  -->
                    <DataGridTextColumn
                    Header="#"
                    Binding="{Binding Path=ExecutionOrderNumber}"
                    IsReadOnly="True"
                    Width="Auto">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource DataGridTextBlockStyle}">
                                <Setter Property="Visibility">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource IsGroupToVisibilityMultiConverter}">
                                            <Binding Path="IsGroup" />
                                            <Binding Path="GroupGUID" />
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <!--  Node Name  -->
                    <DataGridTextColumn
                    Header="Name"
                    Binding="{Binding Name}"
                    IsReadOnly="True"
                    Width="*">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource DataGridTextBlockStyle}">
                                <Setter Property="Margin">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource IsGroupToMarginMultiConverter}">
                                            <Binding Path="IsGroup" />
                                            <Binding Path="GroupGUID" />
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <!--  Execution Time  -->
                    <DataGridTextColumn
                    Header="Execution Time (ms)"
                    Binding="{Binding ExecutionMilliseconds}"
                    IsReadOnly="True"
                    Width="Auto">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource DataGridTextBlockStyle}" />
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </StackPanel>
    </Grid>
</Window>
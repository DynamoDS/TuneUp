<Window x:Class="TuneUp.TuneUpWindow"
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
         xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
         xmlns:local="clr-namespace:TuneUp"
         xmlns:ui="clr-namespace:Dynamo.UI;assembly=DynamoCoreWpf"
         xmlns:controls1="clr-namespace:Dynamo.Wpf.Controls;assembly=DynamoCoreWpf"
         xmlns:componentmodel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
         mc:Ignorable="d" 
         d:DesignHeight="300" d:DesignWidth="300"
         Width="500" Height="100">
    <Window.Resources>        
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoColorsAndBrushesDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoModernDictionaryUri}" />
            </ResourceDictionary.MergedDictionaries>
            <local:IsGroupToMarginMultiConverter  x:Key="IsGroupToMarginMultiConverter" />
            <local:IsGroupToVisibilityMultiConverter  x:Key="IsGroupToVisibilityMultiConverter" />
            <local:ExecutionOrderNumberVisibilityConverter  x:Key="ExecutionOrderNumberVisibilityConverter" />
            <local:IsGroupToColorBrushConverter x:Key="IsGroupToColorBrushConverter" />
            <local:IsGroupToColorBrushMultiConverter x:Key="IsGroupToColorBrushMultiConverter"/>
            <local:IsInGroupToColorBrushMultiConverter x:Key="IsInGroupToColorBrushMultiConverter"/>
            <local:IsRenamedToVisibilityMultiConverter x:Key="IsRenamedToVisibilityMultiConverter"/>
            <local:ExecutionOrderNumberConverter x:Key="ExecutionOrderNumberConverter"/>
            
            <!-- ERROR : DYNAMO CRASHES WHEN REFERENCED FROM DYNAMOCOREWPF -->
            <Color x:Key="BorderColorTuneUp">#555555</Color>
            <SolidColorBrush x:Key="BorderColorBrushTuneUp" Color="{StaticResource BorderColorTuneUp}" />
            
        </ResourceDictionary>
    </Window.Resources>
    
    <Grid Name="MainGrid" >
        <Grid.Resources>
            <!-- DataGrid style -->
            <Style x:Key="DataGridStyleTuneUp" TargetType="{x:Type DataGrid}">
                <Setter Property="ColumnHeaderStyle" Value="{DynamicResource ColumnHeaderStyleTuneUp}"/>
                <Setter Property="RowStyle" Value="{DynamicResource RowStyle1}"/>
                <Setter Property="CellStyle" Value="{DynamicResource CellStyle1}"/>
                <Setter Property="RowHeaderWidth" Value="0"/>
                <Setter Property="BorderThickness" Value="0.5" />
                <Setter Property="BorderBrush" Value="{StaticResource BorderColorBrushTuneUp}"/>
                <Setter Property="ColumnWidth" Value="Auto"/>
                <Setter Property="GridLinesVisibility" Value="Vertical"/>
                <Setter Property="VerticalGridLinesBrush" Value="{StaticResource BorderColorBrushTuneUp}"/>
                <Setter Property="UseLayoutRounding" Value="True"></Setter>
                <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
                <Setter Property="Background" Value="{StaticResource ExtensionBackgroundColor}"/>
            </Style>
            <!-- ERROR : TUNEUP DOES NOT LOAD WHEN USING THIS !!!-->
            <!--<Style x:Key="DataGridStyle2" TargetType="{x:Type DataGrid}" BasedOn="{StaticResource DataGridStyle1}">
                <Setter Property="ColumnHeaderStyle" Value="{DynamicResource ColumnHeaderStyleTuneUp}"/>
                <Setter Property="RowStyle" Value="{DynamicResource RowStyle1}"/>
                <Setter Property="CellStyle" Value="{DynamicResource CellStyle1}"/>                
                <Setter Property="BorderBrush" Value="#555555"/>
                <Setter Property="VerticalGridLinesBrush" Value="#555555"/>
            </Style>-->
            <!-- DataGridColumnHeader style -->
            <Style x:Key="ColumnHeaderStyleTuneUp" TargetType="DataGridColumnHeader">
                <Setter Property="Height" Value="20"/>
                <Setter Property="Background" Value="{StaticResource ExtensionBackgroundColor}"/>
                <Setter Property="Foreground" Value="{StaticResource MemberButtonText}"/>
                <Setter Property="FontFamily" Value="{StaticResource ArtifaktElementRegular}"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="#555555"/>
                <Setter Property="Margin" Value="5,0,10,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="HeaderContent"
                                              Grid.Column="1"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              Margin="11,0,0,0"/>
                                <Path x:Name="SortArrow"
                                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                                  Grid.Column="0"
                                  Margin="0,0,4,0"
                                  Stretch="Fill"
                                  Width="7" Height="6"
                                  Fill="#999999"                                      
                                  VerticalAlignment="Center"
                                  RenderTransformOrigin="0.5,0.5"
                                  Visibility="Collapsed"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="SortDirection" Value="Ascending">
                                    <Setter TargetName="HeaderContent" Property="Margin" Value="0"/>
                                    <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="SortArrow" Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="180"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="SortDirection" Value="Descending">
                                    <Setter TargetName="HeaderContent" Property="Margin" Value="0"/>
                                    <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="SortArrow" Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="0"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- ERROR : TUNEUP DOES NOT LOAD WHEN USING THIS !!!-->
            <!--<Style x:Key="ColumnHeaderStyle2" TargetType="DataGridColumnHeader" BasedOn="{StaticResource ColumnHeaderStyle1}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="HeaderContent"
                                                  Grid.Column="1"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Left"
                                                  Margin="11,0,0,0"/>
                                <Path x:Name="SortArrow"
                                      Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                                      Grid.Column="0"
                                      Margin="0,0,4,0"
                                      Stretch="Fill"
                                      Width="7" Height="6"
                                      Fill="#999999"       
                                      VerticalAlignment="Center"
                                      RenderTransformOrigin="0.5,0.5"
                                      Visibility="Collapsed"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="SortDirection" Value="Ascending">
                                    <Setter TargetName="HeaderContent" Property="Margin" Value="0"/>
                                    <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="SortArrow" Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="180"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="SortDirection" Value="Descending">
                                    <Setter TargetName="HeaderContent" Property="Margin" Value="0"/>
                                    <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="SortArrow" Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="0"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>-->

            <!-- DataGridRow style -->
            <Style x:Key="RowStyle1" TargetType="DataGridRow">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0.45" />
                <!--<Setter Property="BorderBrush" Value="#555555"/>-->
                <!--<Setter Property="BorderThickness" Value="0"/>-->
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#434343"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{StaticResource MainBackgroundColor}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!-- Cell style -->
            <Style x:Key="CellStyle1" TargetType="DataGridCell">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Margin" Value="1" />
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="#555555" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!-- TextBlock style for DataGrid columns -->
            <Style x:Key="DataGridTextBlockStyle" TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="10,0,10,0"/>
                <Setter Property="Foreground" Value="#AAAAAA"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=IsMouseOver}" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource MemberButtonText}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=IsSelected}" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource MemberButtonText}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <!-- Label style -->
            <Style TargetType="Label">
                <Setter Property="Foreground" Value="{StaticResource NodeNameForeground}" />
                <Setter Property="FontFamily" Value="{StaticResource ArtifaktElementRegular}" />
            </Style>
            <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#999999"/>
                    </Trigger>
                </Style.Triggers>
            </Style>            
        </Grid.Resources>
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="175" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" /> <!-- run times & Show Groups button-->
            <RowDefinition Height="Auto" /> <!-- Run All button-->
            <RowDefinition Height="Auto" /> <!-- data grid-->
            <RowDefinition Height="Auto" /> <!-- export button-->
        </Grid.RowDefinitions>
            
            
        <!-- Execution Times -->
        <StackPanel
            Grid.Row="0" Grid.Column="0"
            HorizontalAlignment="Left"
            Orientation="Vertical">
            <Label>Graph execution time (ms)</Label>
            <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                <Label Width="70">Latest</Label>
                <Label Name="LatestExecutionTime"
                       Content="{Binding Path=LatestGraphExecutiontime, Mode=OneWay}"/>
            </StackPanel>
            <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                <Label Width="70">Previous</Label>
                <Label Name="PreviousExecutionTime"
                       Content="{Binding Path=PreviousGraphExecutiontime, Mode=OneWay}"/>
            </StackPanel>
            <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
               <Label Width="70">Total</Label>
                <Label Name="TotalExecutionTime"
                       Content="{Binding Path=TotalGraphExecutiontime, Mode=OneWay}"/>
            </StackPanel>
        </StackPanel>
        
        
        <!-- Show Groups Button -->
        <StackPanel
            Grid.Row="0" Grid.Column="1"
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            Orientation="Horizontal">
            <ToggleButton
                Width="30"
                Height="15"
                Margin="2,0,0,0"
                VerticalAlignment="Center"
                IsEnabled="True"
                IsChecked="{Binding ShowGroups, Mode=TwoWay}"
                Style="{StaticResource EllipseToggleButton1}"/>
            <Label>Show groups</Label>
            <!--<TextBlock Text="Show groups"
                       Style="{StaticResource LabelStyle}"
                       Margin="5 0"
                       VerticalAlignment="Center" />-->
            <Rectangle Width="16"
                       Height="16"
                       VerticalAlignment="Center"
                       Margin="10,0,0,0">
                <Rectangle.Fill>
                    <ImageBrush ImageSource="/DynamoCoreWpf;component/UI/Images/help-16px.png" />
                </Rectangle.Fill>
                <Rectangle.ToolTip>
                    <ToolTip Content="Some text here...."
                             Style="{StaticResource GenericToolTipLight}" />
                </Rectangle.ToolTip>
            </Rectangle>
        </StackPanel>
        <!-- Run All Button-->
        <Button
            Name="RunAll"
            Grid.Row="1" Grid.Column="2"
            HorizontalAlignment="Right"
            Background="#353535"
            Foreground="{StaticResource NodeNameForeground}"
            Width="60"
            Height="Auto"
            Margin="0,0,7,5"
            Padding="5,2,5,2"
            IsEnabled="{Binding  Path=IsRecomputeEnabled}"
            Click="RecomputeGraph_Click">
            Run All
        </Button>



        <!-- Recompute All Button --><!--
        <StackPanel
        Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"
        HorizontalAlignment="Left"
        Orientation="Horizontal">
            <Button
            Name="RecomputeGraph"
            Width="Auto"
            Height="Auto"
            Margin="2,1,1,10"
            Padding="5,2,5,2"
            IsEnabled="{Binding  Path=IsRecomputeEnabled}"
            Click="RecomputeGraph_Click">
                Run All
            </Button>
            <Button
            Name="ExportTimes"
            Width="Auto"
            Height="Auto"
            Margin="2,1,1,10"
            Padding="5,2,5,2"
            Click="ExportTimes_Click"
            IsEnabled="{Binding Path=IsRecomputeEnabled}">
                Export
            </Button>
            <Label Foreground="{StaticResource NodeNameForeground}">Total</Label>
            <Label Foreground="{StaticResource NodeNameForeground}"
               FontFamily="{StaticResource ArtifaktElementRegular}"
               Name="TotalGraphExecutiontimeLabel"
               Content="{Binding Path=TotalGraphExecutiontime, Mode=OneWay}"/>
        </StackPanel>-->



        <StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2">
            <DataGrid
            x:Name="NodeAnalysisTable"
            Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"
            ItemsSource="{Binding Path=ProfiledNodesCollection.View}"                
            Style="{StaticResource DataGridStyleTuneUp}"
            AlternationCount="2"
            AlternatingRowBackground="#434343"
            AutoGenerateColumns="False"
            CanUserAddRows="False"
            Background="#353535"
            FontSize="11"
            VerticalAlignment="Center"
            SelectionUnit="FullRow"
            SelectionMode="Single"
            ScrollViewer.CanContentScroll="False"
            ScrollViewer.HorizontalScrollBarVisibility="Auto"
            ScrollViewer.VerticalScrollBarVisibility="Auto"
            CanUserResizeColumns="True"
            CanUserSortColumns="True"
            HeadersVisibility="Column"
            SelectionChanged="NodeAnalysisTable_SelectionChanged"
            PreviewMouseDown="NodeAnalysisTable_PreviewMouseDown"
            MouseLeave="NodeAnalysisTable_MouseLeave"
            Sorting="NodeAnalysisTable_Sorting">
                <DataGrid.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <StackPanel>
                                    <TextBlock
                                    Margin="3"
                                    FontFamily="{StaticResource ArtifaktElementRegular}"
                                    FontSize="12"
                                    Foreground="{StaticResource NodeNameForeground}"
                                    Text="{Binding Name}" />
                                </StackPanel>
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </DataGrid.GroupStyle>
                <DataGrid.Columns>
                    
                    <!--  Execution Order  -->
                    <DataGridTextColumn
                        Header="#"
                        Binding="{Binding Converter={StaticResource ExecutionOrderNumberConverter}}"
                        Width="Auto">                        
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource DataGridTextBlockStyle}">
                                <Setter Property="Visibility">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource ExecutionOrderNumberVisibilityConverter}">
                                            <Binding Path="IsGroup" />
                                            <Binding Path="GroupGUID" />
                                            <Binding Path="ShowGroupIndicator" />
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    
                    <!--  Node Name  -->
                    <DataGridTemplateColumn Header="Name" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="3"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto" MinWidth="8"/>
                                    </Grid.ColumnDefinitions>
                                    <!-- Group indicator -->
                                    <Border Grid.Column="0">
                                        <Border.Background>
                                            <MultiBinding Converter="{StaticResource IsInGroupToColorBrushMultiConverter}" Mode="OneWay">
                                                <Binding Path="IsGroup" />
                                                <Binding Path="GroupGUID" />
                                                <Binding Path="BackgroundBrush" />
                                                <Binding Path="ShowGroupIndicator" />
                                            </MultiBinding>
                                        </Border.Background>
                                    </Border>
                                    <!-- Node name -->
                                    <Border Grid.Column="1">
                                        <Border.Background>
                                            <MultiBinding Converter="{StaticResource IsGroupToColorBrushMultiConverter}">
                                                <Binding Path="IsGroup" />
                                                <Binding Path="BackgroundBrush" />
                                            </MultiBinding>
                                        </Border.Background>
                                        <TextBlock Text="{Binding Name}"
                                                   VerticalAlignment="Center">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsGroupExecutionTime}" Value="True">
                                                            <Setter Property="TextAlignment" Value="Right"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                            <TextBlock.Margin>
                                                <MultiBinding Converter="{StaticResource IsGroupToMarginMultiConverter}">
                                                    <Binding Path="IsGroup" />
                                                    <Binding Path="GroupGUID" />
                                                    <Binding Path="ShowGroupIndicator" />
                                                </MultiBinding>
                                            </TextBlock.Margin>
                                            <TextBlock.Foreground>
                                                <Binding Path="IsGroup" Converter="{StaticResource IsGroupToColorBrushConverter}"/>
                                            </TextBlock.Foreground>
                                        </TextBlock>
                                    </Border>
                                    <!-- Renamed node indicator -->
                                    <Border Grid.Column="2">
                                        <Border.Background>
                                            <MultiBinding Converter="{StaticResource IsGroupToColorBrushMultiConverter}">
                                                <Binding Path="IsGroup" />
                                                <Binding Path="BackgroundBrush" />
                                            </MultiBinding>
                                        </Border.Background>
                                    </Border>
                                    <Ellipse Name="nodeRenamedBlueDot"
                                             Grid.Column="2"
                                             Width="6"
                                             Height="6"
                                             Margin="5 0 8 0"
                                             HorizontalAlignment="Right"
                                             VerticalAlignment="Center"
                                             Fill="{StaticResource Blue300Brush}">
                                        <!--<Ellipse.ToolTip>
                                            <controls1:DynamoToolTip AttachmentSide="Bottom" Style="{DynamicResource ResourceKey=SLightToolTip}">
                                                <Grid>
                                                    <TextBlock MaxWidth="200"
                                                               Padding="5"
                                                               Text="Placeholder"/>
                                                </Grid>
                                            </controls1:DynamoToolTip>
                                        </Ellipse.ToolTip>-->
                                        <Ellipse.Visibility>
                                            <MultiBinding Converter="{StaticResource IsRenamedToVisibilityMultiConverter}">
                                                <Binding Path="IsGroup" />
                                                <Binding Path="IsRenamed" />
                                            </MultiBinding>
                                        </Ellipse.Visibility>
                                    </Ellipse>  
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    
                    <!--  Execution Time  -->
                    <DataGridTextColumn Header="Execution Time (ms)"
                                        Binding="{Binding ExecutionMilliseconds}"
                                        IsReadOnly="True"
                                        Width="Auto">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource DataGridTextBlockStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsGroup}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    
                </DataGrid.Columns>
            </DataGrid>
        </StackPanel>

        <!-- Export Button-->
        <Button
            Grid.Row="3" Grid.Column="2"
            HorizontalAlignment="Right"
            VerticalAlignment="Bottom"
            Name="ExportTimes"
            Width="Auto"
            Height="Auto"
            Margin="2,1,1,10"
            Padding="5,2,5,2"
            Click="ExportTimes_Click"
            IsEnabled="{Binding Path=IsRecomputeEnabled}">
            Export
        </Button>
    </Grid>
</Window>
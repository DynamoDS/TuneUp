<Window
    x:Class="TuneUp.TuneUpWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:componentmodel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:TuneUp"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="clr-namespace:Dynamo.UI;assembly=DynamoCoreWpf"
    xmlns:resx="clr-namespace:TuneUp.Properties"
    Width="500"
    Height="100"
    d:DesignHeight="300"
    d:DesignWidth="300"
    mc:Ignorable="d">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoColorsAndBrushesDictionaryUri}" />
                <ui:SharedResourceDictionary Source="{x:Static ui:SharedDictionaryManager.DynamoModernDictionaryUri}" />
            </ResourceDictionary.MergedDictionaries>
            <local:IsGroupToMarginMultiConverter x:Key="IsGroupToMarginMultiConverter" />
            <local:IsGroupToVisibilityMultiConverter x:Key="IsGroupToVisibilityMultiConverter" />
            <local:ExecutionOrderNumberVisibilityConverter x:Key="ExecutionOrderNumberVisibilityConverter" />
            <local:IsGroupToColorBrushMultiConverter x:Key="IsGroupToColorBrushMultiConverter" />
            <local:IsInGroupToColorBrushMultiConverter x:Key="IsInGroupToColorBrushMultiConverter" />
            <local:IsRenamedToVisibilityMultiConverter x:Key="IsRenamedToVisibilityMultiConverter" />
            <local:ExecutionOrderNumberConverter x:Key="ExecutionOrderNumberConverter" />
            <local:ContainsStringConverter x:Key="ContainsStringConverter" />
            <local:IsGroupAndBackgroundToForegroundConverter x:Key="IsGroupAndBackgroundToForegroundConverter" />
            <!--  ERROR : DYNAMO CRASHES WHEN REFERENCED FROM DYNAMOCOREWPF  -->
            <Color x:Key="BorderColorTuneUp">#555555</Color>
            <SolidColorBrush x:Key="BorderColorBrushTuneUp" Color="{StaticResource BorderColorTuneUp}" />
            <Color x:Key="AlternativeBackgroundColor">#434343</Color>
            <SolidColorBrush x:Key="AlternativeBackgroundBrush" Color="{StaticResource AlternativeBackgroundColor}" />
            <SolidColorBrush x:Key="BorderMediumColorBrush" Color="{StaticResource BorderMediumColor}" />
        </ResourceDictionary>
    </Window.Resources>
    <Grid Name="MainGrid">
        <Grid.Resources>
            <!--  DataGrid style  -->
            <Style x:Key="DataGridStyleTuneUpCombined" TargetType="{x:Type DataGrid}">
                <Setter Property="AutoGenerateColumns" Value="False" />
                <Setter Property="CanUserAddRows" Value="False" />
                <Setter Property="CanUserResizeColumns" Value="False" />
                <Setter Property="CanUserSortColumns" Value="True" />
                <Setter Property="FontSize" Value="11" />
                <Setter Property="HeadersVisibility" Value="Column" />
                <Setter Property="SelectionMode" Value="Single" />
                <Setter Property="SelectionUnit" Value="FullRow" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                <Setter Property="ColumnHeaderStyle" Value="{DynamicResource ColumnHeaderStyleTuneUp}" />
                <Setter Property="RowStyle" Value="{DynamicResource RowStyle1}" />
                <Setter Property="CellStyle" Value="{DynamicResource CellStyle1}" />
                <Setter Property="RowHeaderWidth" Value="0" />
                <Setter Property="BorderThickness" Value="0.5" />
                <Setter Property="BorderBrush" Value="{StaticResource ExtensionBackgroundColor}" />
                <Setter Property="GridLinesVisibility" Value="Vertical" />
                <Setter Property="VerticalGridLinesBrush" Value="{StaticResource BorderColorBrushTuneUp}" />
                <Setter Property="UseLayoutRounding" Value="True" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Background" Value="{StaticResource ExtensionBackgroundColor}" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
            </Style>
            <!--  DataGridColumnHeader style  -->
            <Style x:Key="ColumnHeaderStyleTuneUp" TargetType="DataGridColumnHeader">
                <Setter Property="Height" Value="20" />
                <Setter Property="Background" Value="{StaticResource ExtensionBackgroundColor}" />
                <Setter Property="Foreground" Value="{StaticResource UnSelectedLayoutForeground}" />
                <Setter Property="FontFamily" Value="{StaticResource ArtifaktElementRegular}" />
                <Setter Property="FontSize" Value="10" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Margin" Value="5,0,5,0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <DockPanel HorizontalAlignment="Left" LastChildFill="False">
                                <!--  Sort Arrow  -->
                                <Path
                                    x:Name="SortArrow"
                                    Width="7"
                                    Height="6"
                                    Margin="5,0,0,0"
                                    VerticalAlignment="Center"
                                    Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                                    DockPanel.Dock="Right"
                                    Fill="{StaticResource UnSelectedLayoutForeground}"
                                    RenderTransformOrigin="0.5,0.5"
                                    Stretch="Fill"
                                    Visibility="Collapsed" />
                                <!--  Header Content  -->
                                <ContentPresenter
                                    x:Name="HeaderContent"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    DockPanel.Dock="Left" />
                            </DockPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="SortDirection" Value="Ascending">
                                    <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="SortArrow" Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="180" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="SortDirection" Value="Descending">
                                    <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="SortArrow" Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="0" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--  DataGridRow style  -->
            <Style x:Key="RowStyle1" TargetType="DataGridRow">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="MinHeight" Value="17" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource AlternativeBackgroundBrush}" />
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{StaticResource MainBackgroundColor}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!--  Cell style  -->
            <Style x:Key="CellStyle1" TargetType="DataGridCell">
                <Setter Property="BorderThickness" Value="0" />
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{StaticResource BorderColorBrushTuneUp}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!--  TextBlock style for DataGrid columns  -->
            <Style x:Key="DataGridTextBlockStyle" TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="6,0,5,0" />
                <Setter Property="Foreground" Value="{StaticResource DarkThemeBodyMediumBrush}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=IsMouseOver}" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource MemberButtonText}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=IsSelected}" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource MemberButtonText}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <!--  TextBlock style for "ExecutionOrder" Column  -->
            <Style
                x:Key="ExecutionOrderTextBlockStyle"
                BasedOn="{StaticResource DataGridTextBlockStyle}"
                TargetType="TextBlock">
                <Setter Property="Visibility">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource ExecutionOrderNumberVisibilityConverter}">
                            <Binding Path="IsGroup" />
                            <Binding Path="GroupGUID" />
                            <Binding Path="ShowGroupIndicator" />
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--  DataTemplate for "Name" Column  -->
            <DataTemplate x:Key="NodeNameTemplate">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="8" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" MinWidth="8" />
                    </Grid.ColumnDefinitions>
                    <!-- Group indicator -->
                    <Border Grid.Column="0" Margin="5,0,0,0">
                        <Border.Background>
                            <MultiBinding Converter="{StaticResource IsInGroupToColorBrushMultiConverter}" Mode="OneWay">
                                <Binding Path="IsGroup" />
                                <Binding Path="GroupGUID" />
                                <Binding Path="BackgroundBrush" />
                                <Binding Path="ShowGroupIndicator" />
                            </MultiBinding>
                        </Border.Background>
                    </Border>
                    <!--  Node name  -->
                    <Border Grid.Column="1">
                        <Border.Background>
                            <MultiBinding Converter="{StaticResource IsGroupToColorBrushMultiConverter}">
                                <Binding Path="IsGroup" />
                                <Binding Path="BackgroundBrush" />
                            </MultiBinding>
                        </Border.Background>
                        <TextBlock VerticalAlignment="Center" Text="{Binding Name}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Name, Converter={StaticResource ContainsStringConverter}}" Value="True">
                                            <Setter Property="TextAlignment" Value="Right" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                            <TextBlock.Margin>
                                <MultiBinding Converter="{StaticResource IsGroupToMarginMultiConverter}">
                                    <Binding Path="IsGroup" />
                                    <Binding Path="GroupGUID" />
                                    <Binding Path="ShowGroupIndicator" />
                                </MultiBinding>
                            </TextBlock.Margin>
                            <TextBlock.Foreground>
                                <MultiBinding Converter="{StaticResource IsGroupAndBackgroundToForegroundConverter}">
                                    <Binding Path="IsGroup" />
                                    <Binding Path="BackgroundBrush" />
                                </MultiBinding>
                            </TextBlock.Foreground>
                        </TextBlock>
                    </Border>
                    <!--  Renamed node indicator  -->
                    <Border Grid.Column="2">
                        <Border.Background>
                            <MultiBinding Converter="{StaticResource IsGroupToColorBrushMultiConverter}">
                                <Binding Path="IsGroup" />
                                <Binding Path="BackgroundBrush" />
                            </MultiBinding>
                        </Border.Background>
                    </Border>
                    <Ellipse
                        Name="nodeRenamedBlueDot"
                        Grid.Column="2"
                        Width="6"
                        Height="6"
                        Margin="5,0,8,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Fill="{StaticResource Blue300Brush}">
                        <Ellipse.ToolTip>
                            <ToolTip Style="{StaticResource GenericToolTipLight}">
                                <TextBlock>
                                    <TextBlock.Text>
                                        <Binding Path="OriginalName" StringFormat="{x:Static resx:Resources.ToolTip_OriginalName}" />
                                    </TextBlock.Text>
                                </TextBlock>
                            </ToolTip>
                        </Ellipse.ToolTip>
                        <Ellipse.Visibility>
                            <MultiBinding Converter="{StaticResource IsRenamedToVisibilityMultiConverter}">
                                <Binding Path="IsGroup" />
                                <Binding Path="IsRenamed" />
                            </MultiBinding>
                        </Ellipse.Visibility>
                    </Ellipse>
                </Grid>
            </DataTemplate>
            <!--  TextBlock style for "ExecutionTime" Columns  -->
            <Style
                x:Key="ExecutionTimeTextBlockStyle"
                BasedOn="{StaticResource DataGridTextBlockStyle}"
                TargetType="TextBlock">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsGroup}" Value="True">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <!--  TextBlock style  -->
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource DarkThemeBodyMediumBrush}" />
                <Setter Property="FontFamily" Value="{StaticResource ArtifaktElementRegular}" />
            </Style>
            <!--  StackPanel style for total time headers  -->
            <Style x:Key="TotalTimeHeaderStackPanelStyle" TargetType="StackPanel">
                <Setter Property="Orientation" Value="Horizontal" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Height" Value="20" />
            </Style>
            <!--  StackPanel style for collection footer  -->
            <Style x:Key="CollectionFooterStackPanelStyle" TargetType="StackPanel">
                <Setter Property="Orientation" Value="Horizontal" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="Height" Value="25" />
            </Style>
            <!--  TextBlock style for collection footer  -->
            <Style x:Key="CollectionFooterTextBlockStyle" TargetType="TextBlock">
                <Setter Property="Height" Value="20" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="FontFamily" Value="{StaticResource ArtifaktElementBold}" />
            </Style>
            <!--  TextBlock style for collection header  -->
            <Style x:Key="CollectionHeaderTextBlockStyle" TargetType="TextBlock">
                <Setter Property="Height" Value="20" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Margin" Value="5,0,0,0" />
                <Setter Property="FontWeight" Value="Normal" />
            </Style>
            <!-- TextBlock style for tooltip -->
            <Style x:Key="ToolTipContent" TargetType="TextBlock">
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="FontSize" Value="11" />
                <Setter Property="Foreground" Value="{StaticResource TextBlockToolTipDescriptionColor}" />
                <Setter Property="FontFamily" Value="{StaticResource ArtifaktElementRegular}" />
            </Style>
            <!--  Button style ***  -->
            <!--  PackageManager\Controls\ControlColorsAndBrushes  -->
            <Style x:Key="ButtonStyleTuneUp" TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="{StaticResource DarkThemeBodyMediumBrush}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="FontFamily" Value="{DynamicResource ArtifaktElementRegular}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="1">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource Blue400Brush}" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource MidLightBlueBrush}" />
                    </Trigger>
                    <Trigger Property="Visibility" Value="Visible">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="Opacity"
                                        From="0.0"
                                        To="1.0"
                                        Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!--  Context Menu style for Export button *  -->
            <Style
                x:Key="ContextMenuStyleTuneUp"
                BasedOn="{StaticResource ContextMenuStyle}"
                TargetType="{x:Type ContextMenu}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContextMenu}">
                            <Border
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderThickness="0px">
                                <StackPanel
                                    Margin="0"
                                    ClipToBounds="True"
                                    IsItemsHost="True"
                                    Orientation="Vertical" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- Generic Dynamo ToolTip with pointer to the right -->
            <Style x:Key="ToolTipPointerTopRight" TargetType="ToolTip" BasedOn="{StaticResource GenericToolTipLight}">
                <Setter Property="HorizontalOffset" Value="-250" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToolTip">
                            <Grid x:Name="PopupGrid">
                                <Grid x:Name="ShadowBackground" Background="Transparent">
                                    <Path Margin="0 0 5 0 " Width="20" Height="6" HorizontalAlignment="Right" VerticalAlignment="Top" Data="M0,6 L6,0 12,6Z" Stroke="Gray" Fill="White" Stretch="None" />
                                    <Border BorderThickness="1 0 1 1" CornerRadius="3" Margin="0 5 7 7" BorderBrush="#999999" Background="White" Padding="10,8">
                                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Top" />
                                    </Border>
                                </Grid>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Grid.Resources>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MinWidth="150" />
            <ColumnDefinition Width="150" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!--  Execution Times  -->
        <StackPanel
            Grid.Row="0"
            Grid.Column="0"
            HorizontalAlignment="Left"
            Orientation="Vertical">
            <TextBlock
                Height="20"
                Margin="5,0,0,0"
                Text="{x:Static resx:Resources.Label_GraphExecutionTime}" />
            <StackPanel Style="{StaticResource TotalTimeHeaderStackPanelStyle}">
                <TextBlock
                    Width="70"
                    Margin="5,0,0,0"
                    Text="{x:Static resx:Resources.Label_Latest}" />
                <TextBlock Text="{Binding Path=LatestGraphExecutionTime, Mode=OneWay}" />
            </StackPanel>
            <StackPanel Style="{StaticResource TotalTimeHeaderStackPanelStyle}">
                <TextBlock
                    Width="70"
                    Margin="5,0,0,0"
                    Text="{x:Static resx:Resources.Label_Previous}" />
                <TextBlock Text="{Binding Path=PreviousGraphExecutionTime, Mode=OneWay}" />
            </StackPanel>
            <StackPanel Style="{StaticResource TotalTimeHeaderStackPanelStyle}">
                <TextBlock
                    Width="70"
                    Margin="5,0,0,0"
                    FontFamily="{StaticResource ArtifaktElementBold}"
                    Text="{x:Static resx:Resources.Label_Total}" />
                <TextBlock FontFamily="{StaticResource ArtifaktElementBold}" Text="{Binding Path=TotalGraphExecutionTime, Mode=OneWay}" >
                    <TextBlock.ToolTip>
                        <ToolTip Style="{StaticResource GenericToolTipLight}">
                            <TextBlock Text="{x:Static resx:Resources.ToolTip_TotalExecutionTime}" Style="{StaticResource ToolTipContent}"/>
                        </ToolTip>
                    </TextBlock.ToolTip>
                </TextBlock>
            </StackPanel>
        </StackPanel>
        <!--  Show Groups Button  -->
        <StackPanel
            Grid.Row="0"
            Grid.Column="1"
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            Orientation="Horizontal">
            <ToggleButton
                Width="30"
                Height="15"
                Margin="2,0,0,0"
                VerticalAlignment="Center"
                IsChecked="{Binding ShowGroups, Mode=TwoWay}"
                IsEnabled="True"
                Style="{StaticResource EllipseToggleButton1}" />
            <TextBlock Margin="5,0,7,0" Text="{x:Static resx:Resources.Button_ShowGroups}" />
            <!--<Rectangle Width="16"
                       Height="16"
                       Margin="10,0,7,0"
                       VerticalAlignment="Center">
                <Rectangle.Fill>
                    <ImageBrush ImageSource="/DynamoCoreWpf;component/UI/Images/help-16px.png" />
                </Rectangle.Fill>
            </Rectangle>-->
        </StackPanel>
        <!--  Run All Button  -->
        <Button
            Grid.Row="1"
            Grid.Column="2"
            Width="60"
            Height="24"
            Margin="0,0,7,20"
            Padding="5,2,5,2"
            HorizontalAlignment="Right"
            BorderBrush="{StaticResource BorderMediumColorBrush}"
            Click="RecomputeGraph_Click"
            Content="{x:Static resx:Resources.Button_RunAll}"
            Cursor="Hand"
            IsEnabled="{Binding Path=IsRecomputeEnabled}"
            Style="{StaticResource ButtonStyleTuneUp}" >
            <Button.ToolTip>
                <ToolTip Style="{StaticResource ToolTipPointerTopRight}">
                    <TextBlock Text="{x:Static resx:Resources.ToolTip_RunAll}" Style="{StaticResource ToolTipContent}"/>
                </ToolTip>
            </Button.ToolTip>
        </Button>
        <!--  Data Grids  -->
        <Grid
            Name="Nodes"
            Grid.Row="2"
            Grid.Column="0"
            Grid.ColumnSpan="2">
            <ScrollViewer VerticalScrollBarVisibility="Auto"
                          Focusable="True">
                <StackPanel >
                    <!-- Latest Run -->
                    <TextBlock Text="{x:Static resx:Resources.Label_LatestRun}"
                               Style="{StaticResource CollectionHeaderTextBlockStyle}"
                               Visibility="{Binding LatestRunTableVisibility}"/>
                    <DataGrid ItemsSource="{Binding Path=ProfiledNodesCollectionLatestRun.View}"
                              x:Name="LatestRunTable"
                              Style="{StaticResource DataGridStyleTuneUpCombined}"
                              AlternatingRowBackground="#434343"
                              Sorting="LatestRunTable_Sorting"
                              SelectionChanged="NodeAnalysisTable_SelectionChanged"
                              PreviewMouseDown="NodeAnalysisTable_PreviewMouseDown"
                              MouseLeave="NodeAnalysisTable_MouseLeave"
                              PreviewMouseWheel="DataGrid_PreviewMouseWheel"
                              Loaded="ScrollViewer_Loaded">
                        <DataGrid.Columns>
                            <!--  Execution Order  -->
                            <DataGridTextColumn Width="40" Header="{x:Static resx:Resources.Header_ExecutionOrder}">
                                <DataGridTextColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{x:Static resx:Resources.Header_ExecutionOrder}">
                                            <TextBlock.ToolTip>
                                                <ToolTip Style="{StaticResource GenericToolTipLight}">
                                                    <TextBlock Text="{x:Static resx:Resources.ToolTip_ExecutionOrder}" Style="{StaticResource ToolTipContent}"/>
                                                </ToolTip>
                                            </TextBlock.ToolTip>
                                        </TextBlock>
                                    </DataTemplate>
                                </DataGridTextColumn.HeaderTemplate>
                                <DataGridTextColumn.ElementStyle>
                                    <Style BasedOn="{StaticResource ExecutionOrderTextBlockStyle}" TargetType="TextBlock">
                                        <Setter Property="Text" Value="{Binding ExecutionOrderNumber}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding DataContext.ShowGroups, RelativeSource={RelativeSource AncestorType=DataGrid}}" Value="True">
                                                <Setter Property="Text" Value="{Binding GroupExecutionOrderNumber}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <!--  Node Name  -->
                            <DataGridTemplateColumn
                                Width="*"
                                Header="{x:Static resx:Resources.Header_Name}"
                                SortMemberPath="Name">
                                <DataGridTemplateColumn.CellTemplate>
                                    <StaticResource ResourceKey="NodeNameTemplate" />
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <!--  Execution Time  -->
                            <DataGridTextColumn Width="120"
                                                Binding="{Binding ExecutionMilliseconds}"
                                                Header="{x:Static resx:Resources.Header_ExecutionTime}"
                                                IsReadOnly="True">
                                <DataGridTextColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{x:Static resx:Resources.Header_ExecutionTime}">
                                            <TextBlock.ToolTip>
                                                <ToolTip Style="{StaticResource ToolTipPointerTopRight}">
                                                    <TextBlock Text="{x:Static resx:Resources.ToolTip_ExecutionTime}" Style="{StaticResource ToolTipContent}"/>
                                                </ToolTip>
                                            </TextBlock.ToolTip>
                                        </TextBlock>
                                    </DataTemplate>
                                </DataGridTextColumn.HeaderTemplate>
                                <DataGridTextColumn.ElementStyle>
                                    <Style BasedOn="{StaticResource ExecutionTimeTextBlockStyle}" TargetType="TextBlock" />
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <StackPanel Style="{StaticResource CollectionFooterStackPanelStyle}" Visibility="{Binding LatestRunTableVisibility}">
                        <TextBlock Style="{StaticResource CollectionFooterTextBlockStyle}" Text="{x:Static resx:Resources.Label_Total}" />
                        <TextBlock
                            Width="120"
                            Margin="10,0,0,0"
                            Padding="7,0,0,0"
                            HorizontalAlignment="Left"
                            Style="{StaticResource CollectionFooterTextBlockStyle}"
                            Text="{Binding Path=LatestGraphExecutionTime, Mode=OneWay}" />
                    </StackPanel>
                    <!-- Previous Run -->
                    <TextBlock Text="{x:Static resx:Resources.Label_PreviousRun}"
                               Style="{StaticResource CollectionHeaderTextBlockStyle}"
                               Visibility="{Binding PreviousRunTableVisibility}"/>
                    <DataGrid ItemsSource="{Binding Path=ProfiledNodesCollectionPreviousRun.View}"
                              x:Name="PreviousRunTable"
                              Style="{StaticResource DataGridStyleTuneUpCombined}"
                              AlternatingRowBackground="#434343"
                              HeadersVisibility="None"
                              Sorting="LatestRunTable_Sorting"
                              SelectionChanged="NodeAnalysisTable_SelectionChanged"
                              PreviewMouseDown="NodeAnalysisTable_PreviewMouseDown"
                              MouseLeave="NodeAnalysisTable_MouseLeave"
                              PreviewMouseWheel="DataGrid_PreviewMouseWheel"
                              Loaded="ScrollViewer_Loaded">
                        <DataGrid.Columns>
                            <!--  Execution Order  -->
                            <DataGridTextColumn Width="40" Binding="{Binding Converter={StaticResource ExecutionOrderNumberConverter}}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style BasedOn="{StaticResource ExecutionOrderTextBlockStyle}" TargetType="TextBlock">
                                        <Setter Property="Text" Value="{Binding ExecutionOrderNumber}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding DataContext.ShowGroups, RelativeSource={RelativeSource AncestorType=DataGrid}}" Value="True">
                                                <Setter Property="Text" Value="{Binding GroupExecutionOrderNumber}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <!--  Node Name  -->
                            <DataGridTemplateColumn Width="*" SortMemberPath="Name">
                                <DataGridTemplateColumn.CellTemplate>
                                    <StaticResource ResourceKey="NodeNameTemplate" />
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <!--  Execution Time  -->
                            <DataGridTextColumn
                                Width="120"
                                Binding="{Binding ExecutionMilliseconds}"
                                IsReadOnly="True">
                                <DataGridTextColumn.ElementStyle>
                                    <Style BasedOn="{StaticResource ExecutionTimeTextBlockStyle}" TargetType="TextBlock" />
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <StackPanel Style="{StaticResource CollectionFooterStackPanelStyle}" Visibility="{Binding PreviousRunTableVisibility}">
                        <TextBlock Style="{StaticResource CollectionFooterTextBlockStyle}" Text="{x:Static resx:Resources.Label_Total}" />
                        <TextBlock
                            Width="120"
                            Margin="10,0,0,0"
                            Padding="7,0,0,0"
                            HorizontalAlignment="Left"
                            Style="{StaticResource CollectionFooterTextBlockStyle}"
                            Text="{Binding Path=PreviousGraphExecutionTime, Mode=OneWay}" />
                    </StackPanel>
                    <!-- Not Executed -->
                    <TextBlock Text="{x:Static resx:Resources.Label_NotExecuted}"
                               Style="{StaticResource CollectionHeaderTextBlockStyle}"
                               Visibility="{Binding NotExecutedTableVisibility}">
                        <TextBlock.ToolTip>
                            <ToolTip Style="{StaticResource GenericToolTipLight}">
                                <TextBlock Text="{x:Static resx:Resources.ToolTip_NotExecuted}" Style="{StaticResource ToolTipContent}"/>
                            </ToolTip>
                        </TextBlock.ToolTip>
                    </TextBlock>
                    <DataGrid ItemsSource="{Binding Path=ProfiledNodesCollectionNotExecuted.View}"
                              x:Name="NotExecutedTable"
                              Style="{StaticResource DataGridStyleTuneUpCombined}"
                              AlternationCount="2"
                              AlternatingRowBackground="#434343"
                              HeadersVisibility="None"
                              CanUserSortColumns="False"
                              Sorting="NotExecutedTable_Sorting"
                              SelectionChanged="NodeAnalysisTable_SelectionChanged"
                              PreviewMouseDown="NodeAnalysisTable_PreviewMouseDown"
                              MouseLeave="NodeAnalysisTable_MouseLeave"
                              PreviewMouseWheel="DataGrid_PreviewMouseWheel"
                              Loaded="ScrollViewer_Loaded">
                        <DataGrid.Columns>
                            <!--  Execution Order  -->
                            <DataGridTextColumn Width="40" />
                            <!--  Node Name  -->
                            <DataGridTemplateColumn Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <StaticResource ResourceKey="NodeNameTemplate" />
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <!--  Execution Time  -->
                            <DataGridTextColumn Width="120" />
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
            </ScrollViewer>
        </Grid>
        <!--  Export Button  -->
        <DockPanel Grid.Row="3" Grid.Column="1">
            <Grid DockPanel.Dock="Top">
                <Button
                    x:Name="ExportButton"
                    Margin="0,10,10,10"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    BorderThickness="0"
                    Click="ExportButton_OnClick"
                    Content="{x:Static resx:Resources.Button_Export}"
                    Cursor="Hand"
                    Style="{StaticResource ButtonStyleTuneUp}">
                    <Button.ContextMenu>
                        <ContextMenu
                            Name="MainContextMenu"
                            Width="170"
                            Height="Auto"
                            Background="{StaticResource MidGrayBrush}"
                            Style="{StaticResource ContextMenuStyleTuneUp}">
                            <MenuItem
                                Name="CSVItem"
                                Padding="10"
                                Click="ExportToCsv_Click"
                                FontSize="12"
                                Header="{x:Static resx:Resources.Button_ExportCsv}" />
                            <MenuItem
                                Name="JSONItem"
                                Padding="10"
                                Click="ExportToJson_Click"
                                FontSize="12"
                                Header="{x:Static resx:Resources.Button_ExportJson}" />
                        </ContextMenu>
                    </Button.ContextMenu>
                </Button>
            </Grid>
        </DockPanel>
    </Grid>
</Window>
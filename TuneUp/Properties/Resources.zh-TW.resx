<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Button_Export" xml:space="preserve">
    <value>匯出</value>
  </data>
  <data name="Button_ExportCsv" xml:space="preserve">
    <value>匯出為 CSV</value>
  </data>
  <data name="Button_ExportJson" xml:space="preserve">
    <value>匯出為 JSON</value>
  </data>
  <data name="Button_RunAll" xml:space="preserve">
    <value>全部執行</value>
  </data>
  <data name="Button_ShowGroups" xml:space="preserve">
    <value>顯示群組</value>
  </data>
  <data name="Button_ShowTuneUp" xml:space="preserve">
    <value>顯示 TuneUp</value>
  </data>
  <data name="ExtensionName" xml:space="preserve">
    <value>TuneUp</value>
  </data>
  <data name="Header_ExecutionOrder" xml:space="preserve">
    <value>#</value>
  </data>
  <data name="Header_ExecutionTime" xml:space="preserve">
    <value>執行時間 (毫秒)</value>
  </data>
  <data name="Header_Name" xml:space="preserve">
    <value>名稱</value>
  </data>
  <data name="Label_DefaultDisplayGroupName" xml:space="preserve">
    <value>標題</value>
  </data>
  <data name="Label_DefaultExecutionTime" xml:space="preserve">
    <value>無法取得</value>
  </data>
  <data name="Label_DefaultGroupName" xml:space="preserve">
    <value>標題 &lt;按兩下這裡編輯群組標題&gt;</value>
  </data>
  <data name="Label_ExecutionTime" xml:space="preserve">
    <value>執行時間</value>
  </data>
  <data name="Label_GraphExecutionTime" xml:space="preserve">
    <value>圖表執行時間 (毫秒)</value>
  </data>
  <data name="Label_GroupNodePrefix" xml:space="preserve">
    <value>群組:</value>
  </data>
  <data name="Label_GroupTotalExecutionTime" xml:space="preserve">
    <value>群組總計</value>
  </data>
  <data name="Label_Latest" xml:space="preserve">
    <value>最近</value>
  </data>
  <data name="Label_LatestRun" xml:space="preserve">
    <value>最近執行</value>
  </data>
  <data name="Label_NotExecuted" xml:space="preserve">
    <value>未執行</value>
  </data>
  <data name="Label_Previous" xml:space="preserve">
    <value>上次</value>
  </data>
  <data name="Label_PreviousRun" xml:space="preserve">
    <value>上次執行</value>
  </data>
  <data name="Label_Total" xml:space="preserve">
    <value>總計</value>
  </data>
  <data name="Message_FileInUse" xml:space="preserve">
    <value>另一個應用程式目前正在使用該檔案。請在嘗試覆蓋之前關閉該檔案。</value>
  </data>
  <data name="Message_FileWriteError" xml:space="preserve">
    <value>嘗試寫入檔案時發生錯誤: {0}</value>
  </data>
  <data name="Title_Error" xml:space="preserve">
    <value>錯誤</value>
  </data>
  <data name="Title_FileInUse" xml:space="preserve">
    <value>檔案正在使用中</value>
  </data>
  <data name="ToolTip_ExecutionOrder" xml:space="preserve">
    <value>執行順序。</value>
  </data>
  <data name="ToolTip_ExecutionTime" xml:space="preserve">
    <value>執行節點所花費的時間 (毫秒)。介於 0 到 1 之間的值會無條件進位到 1 毫秒。</value>
  </data>
  <data name="ToolTip_NotExecuted" xml:space="preserve">
    <value>在最近執行時因為沒有變更而未執行的節點。若要重新執行，請按「全部執行」。</value>
  </data>
  <data name="ToolTip_OriginalName" xml:space="preserve">
    <value>原始節點名稱:
{0}</value>
  </data>
  <data name="ToolTip_RunAll" xml:space="preserve">
    <value>執行整個圖表，包括自最近執行以來沒有變更的節點。</value>
  </data>
  <data name="ToolTip_RunAllDisabled" xml:space="preserve">
    <value>自訂節點模式不支援「全部執行」。</value>
  </data>
  <data name="ToolTip_TotalExecutionTime" xml:space="preserve">
    <value>最近和上次執行的合併執行時間。</value>
  </data>
</root>